default_platform(:android)

platform :android do
  lane :stage do |options|
    commit = last_git_commit
    if commit[:message].downcase.include? "#stag"

      commit_notes = commit[:message].sub("#stag ", "")

      increment_version(app_id: options[:app_id_stag])

      build_apk_staging

      deploy(notes: commit_notes, author: commit[:author], app_id: options[:app_id_stag], firebase_token: options[:firebase_token])
  
    end

    if commit[:message].downcase.include? "#prod"

      commit_notes = commit[:message].sub("#prod ", "")

      increment_version(app_id: options[:app_id_prod])

      build_apk_prod

      deploy(notes: commit_notes, author: commit[:author], app_id: options[:app_id_prod], firebase_token: options[:firebase_token])
  
    end

  end

  lane :build_apk_prod do
    # Navigate to the Flutter project directory
    Dir.chdir("..") do
      # Build the APK using the flutter command
      sh("flutter build apk --flavor prod")
    end
  end

  lane :build_apk_staging do
    # Navigate to the Flutter project directory
    Dir.chdir("..") do
      # Build the APK using the flutter command
      sh("flutter build apk --flavor stag")
    end
  end
    
  lane :increment_version do |options|
    # Fetch the latest release from Firebase App Distribution
    latest_release = firebase_app_distribution_get_latest_release(
      app: "#{options[:app_id]}"
    )
  
    # Increment the version code
    increment_version_code({ version_code: latest_release[:buildVersion].to_i + 1 })
  
  
  end

  lane :deploy do |options|
    build_notes = "Notes: \n #{options[:notes]}. \n Built by #{options[:author]}"

    release = firebase_app_distribution(
       app: "#{options[:app_id]}",
       testers: "jhorgistuff@gmail.com",
       release_notes: build_notes,
       android_artifact_path: "../build/app/outputs/flutter-apk/app-release.apk",
       firebase_cli_token: "#{options[:firebase_token]}"
    )
  end

end


