version: 2.1

orbs:
  android: circleci/android@1.0.3
  flutter: circleci/flutter@2.0.2

jobs:
  build:
    executor:
      name: android/android-machine
      resource-class: medium

    steps:
      - checkout

      - flutter/install_sdk_and_pub:
          version: 3.24.0

      - flutter/install_pub:
          cache-version: v1

      - run:
          name: Flutter pub get
          command: flutter pub get

      # - run:
      #     name: Run unit tests
      #     command: flutter test

  #     - run:
  #         name: Build APK
  #         command: flutter build apk

  #     - store_artifacts:
  #         path: build/app/outputs/flutter-apk/app-release.apk

  alpha_stage:
    docker: # or machine, macos, or a custom executor
      - image: cimg/ruby:3.3.4

    steps:
      - checkout

      - run: ruby --version

      - run:
          name: 'Install Bundler'
          command: gem install bundler

      - run:
          name: 'Install Bundle Dependencies'
          command: |
            cd android && \
            bundle install

      - run:
          name: 'Update Fastlane'
          command: |
            cd android && \
            bundle update fastlane
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "android/Gemfile.lock" }}
      - run:
          name: 'Install Firebase CLI'
          command: |
            curl -sL firebase.tools | bash
      - run:
          name: 'Check Bundler Version'
          command: |
            cd android && \
            bundle --version

      - run:
          name: 'Deploy alpha build to Firebase'
          command: |
            cd android && \ bundle exec fastlane stage \
            flavor:alpha branch:${CIRCLE_BRANCH} \
            app_id:$FIREBASE_APP_ID_ALPHA \
            firebase_token:$FIREBASE_TOKEN

workflows:
  version: 2
  build_tests_deploy:
    jobs:
      - build
      - alpha_stage:
          requires:
            - build
      # - delta_stage:
      #     requires:
      #       - build
      # - prod_stage:
      #     requires:
      #       - build
      # - prod:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #           - develop
      #     requires:
      #       - test
      # - deploy:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #     requires:
      #       - prod
